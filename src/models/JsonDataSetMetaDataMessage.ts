/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataSetMetaDataType } from './DataSetMetaDataType';
import {
    DataSetMetaDataTypeFromJSON,
    DataSetMetaDataTypeFromJSONTyped,
    DataSetMetaDataTypeToJSON,
    DataSetMetaDataTypeToJSONTyped,
} from './DataSetMetaDataType';

/**
 * [Link to specification]().
 * @export
 * @interface JsonDataSetMetaDataMessage
 */
export interface JsonDataSetMetaDataMessage {
    /**
     * 
     * @type {string}
     * @memberof JsonDataSetMetaDataMessage
     */
    MessageId?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonDataSetMetaDataMessage
     */
    MessageType?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonDataSetMetaDataMessage
     */
    PublisherId?: string;
    /**
     * 
     * @type {number}
     * @memberof JsonDataSetMetaDataMessage
     */
    DataSetWriterId?: number;
    /**
     * 
     * @type {string}
     * @memberof JsonDataSetMetaDataMessage
     */
    WriterGroupName?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonDataSetMetaDataMessage
     */
    DataSetWriterName?: string;
    /**
     * 
     * @type {Date}
     * @memberof JsonDataSetMetaDataMessage
     */
    Timestamp?: Date;
    /**
     * 
     * @type {DataSetMetaDataType}
     * @memberof JsonDataSetMetaDataMessage
     */
    MetaData?: DataSetMetaDataType;
}

/**
 * Check if a given object implements the JsonDataSetMetaDataMessage interface.
 */
export function instanceOfJsonDataSetMetaDataMessage(value: object): value is JsonDataSetMetaDataMessage {
    return true;
}

export function JsonDataSetMetaDataMessageFromJSON(json: any): JsonDataSetMetaDataMessage {
    return JsonDataSetMetaDataMessageFromJSONTyped(json, false);
}

export function JsonDataSetMetaDataMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): JsonDataSetMetaDataMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'MessageId': json['MessageId'] == null ? undefined : json['MessageId'],
        'MessageType': json['MessageType'] == null ? undefined : json['MessageType'],
        'PublisherId': json['PublisherId'] == null ? undefined : json['PublisherId'],
        'DataSetWriterId': json['DataSetWriterId'] == null ? undefined : json['DataSetWriterId'],
        'WriterGroupName': json['WriterGroupName'] == null ? undefined : json['WriterGroupName'],
        'DataSetWriterName': json['DataSetWriterName'] == null ? undefined : json['DataSetWriterName'],
        'Timestamp': json['Timestamp'] == null ? undefined : (new Date(json['Timestamp'])),
        'MetaData': json['MetaData'] == null ? undefined : DataSetMetaDataTypeFromJSON(json['MetaData']),
    };
}

export function JsonDataSetMetaDataMessageToJSON(json: any): JsonDataSetMetaDataMessage {
    return JsonDataSetMetaDataMessageToJSONTyped(json, false);
}

export function JsonDataSetMetaDataMessageToJSONTyped(value?: JsonDataSetMetaDataMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'MessageId': value['MessageId'],
        'MessageType': value['MessageType'],
        'PublisherId': value['PublisherId'],
        'DataSetWriterId': value['DataSetWriterId'],
        'WriterGroupName': value['WriterGroupName'],
        'DataSetWriterName': value['DataSetWriterName'],
        'Timestamp': value['Timestamp'] == null ? undefined : ((value['Timestamp']).toISOString()),
        'MetaData': DataSetMetaDataTypeToJSON(value['MetaData']),
    };
}

