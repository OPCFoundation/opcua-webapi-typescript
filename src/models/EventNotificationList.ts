/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventFieldList } from './EventFieldList';
import {
    EventFieldListFromJSON,
    EventFieldListFromJSONTyped,
    EventFieldListToJSON,
    EventFieldListToJSONTyped,
} from './EventFieldList';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/7.25.3).
 * @export
 * @interface EventNotificationList
 */
export interface EventNotificationList {
    /**
     * 
     * @type {Array<EventFieldList>}
     * @memberof EventNotificationList
     */
    Events?: Array<EventFieldList>;
}

/**
 * Check if a given object implements the EventNotificationList interface.
 */
export function instanceOfEventNotificationList(value: object): value is EventNotificationList {
    return true;
}

export function EventNotificationListFromJSON(json: any): EventNotificationList {
    return EventNotificationListFromJSONTyped(json, false);
}

export function EventNotificationListFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventNotificationList {
    if (json == null) {
        return json;
    }
    return {
        
        'Events': json['Events'] == null ? undefined : ((json['Events'] as Array<any>).map(EventFieldListFromJSON)),
    };
}

export function EventNotificationListToJSON(json: any): EventNotificationList {
    return EventNotificationListToJSONTyped(json, false);
}

export function EventNotificationListToJSONTyped(value?: EventNotificationList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Events': value['Events'] == null ? undefined : ((value['Events'] as Array<any>).map(EventFieldListToJSON)),
    };
}

