/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MonitoredItemNotification } from './MonitoredItemNotification';
import {
    MonitoredItemNotificationFromJSON,
    MonitoredItemNotificationFromJSONTyped,
    MonitoredItemNotificationToJSON,
    MonitoredItemNotificationToJSONTyped,
} from './MonitoredItemNotification';
import type { DiagnosticInfo } from './DiagnosticInfo';
import {
    DiagnosticInfoFromJSON,
    DiagnosticInfoFromJSONTyped,
    DiagnosticInfoToJSON,
    DiagnosticInfoToJSONTyped,
} from './DiagnosticInfo';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/7.25.2).
 * @export
 * @interface DataChangeNotification
 */
export interface DataChangeNotification {
    /**
     * 
     * @type {Array<MonitoredItemNotification>}
     * @memberof DataChangeNotification
     */
    MonitoredItems?: Array<MonitoredItemNotification>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof DataChangeNotification
     */
    DiagnosticInfos?: Array<DiagnosticInfo>;
}

/**
 * Check if a given object implements the DataChangeNotification interface.
 */
export function instanceOfDataChangeNotification(value: object): value is DataChangeNotification {
    return true;
}

export function DataChangeNotificationFromJSON(json: any): DataChangeNotification {
    return DataChangeNotificationFromJSONTyped(json, false);
}

export function DataChangeNotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataChangeNotification {
    if (json == null) {
        return json;
    }
    return {
        
        'MonitoredItems': json['MonitoredItems'] == null ? undefined : ((json['MonitoredItems'] as Array<any>).map(MonitoredItemNotificationFromJSON)),
        'DiagnosticInfos': json['DiagnosticInfos'] == null ? undefined : ((json['DiagnosticInfos'] as Array<any>).map(DiagnosticInfoFromJSON)),
    };
}

export function DataChangeNotificationToJSON(json: any): DataChangeNotification {
    return DataChangeNotificationToJSONTyped(json, false);
}

export function DataChangeNotificationToJSONTyped(value?: DataChangeNotification | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'MonitoredItems': value['MonitoredItems'] == null ? undefined : ((value['MonitoredItems'] as Array<any>).map(MonitoredItemNotificationToJSON)),
        'DiagnosticInfos': value['DiagnosticInfos'] == null ? undefined : ((value['DiagnosticInfos'] as Array<any>).map(DiagnosticInfoToJSON)),
    };
}

