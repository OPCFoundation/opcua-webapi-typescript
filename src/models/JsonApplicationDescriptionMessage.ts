/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApplicationDescription } from './ApplicationDescription';
import {
    ApplicationDescriptionFromJSON,
    ApplicationDescriptionFromJSONTyped,
    ApplicationDescriptionToJSON,
    ApplicationDescriptionToJSONTyped,
} from './ApplicationDescription';

/**
 * [Link to specification]().
 * @export
 * @interface JsonApplicationDescriptionMessage
 */
export interface JsonApplicationDescriptionMessage {
    /**
     * 
     * @type {string}
     * @memberof JsonApplicationDescriptionMessage
     */
    MessageId?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonApplicationDescriptionMessage
     */
    MessageType?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonApplicationDescriptionMessage
     */
    PublisherId?: string;
    /**
     * 
     * @type {Date}
     * @memberof JsonApplicationDescriptionMessage
     */
    Timestamp?: Date;
    /**
     * 
     * @type {ApplicationDescription}
     * @memberof JsonApplicationDescriptionMessage
     */
    Description?: ApplicationDescription;
    /**
     * 
     * @type {Array<string>}
     * @memberof JsonApplicationDescriptionMessage
     */
    ServerCapabilities?: Array<string>;
}

/**
 * Check if a given object implements the JsonApplicationDescriptionMessage interface.
 */
export function instanceOfJsonApplicationDescriptionMessage(value: object): value is JsonApplicationDescriptionMessage {
    return true;
}

export function JsonApplicationDescriptionMessageFromJSON(json: any): JsonApplicationDescriptionMessage {
    return JsonApplicationDescriptionMessageFromJSONTyped(json, false);
}

export function JsonApplicationDescriptionMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): JsonApplicationDescriptionMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'MessageId': json['MessageId'] == null ? undefined : json['MessageId'],
        'MessageType': json['MessageType'] == null ? undefined : json['MessageType'],
        'PublisherId': json['PublisherId'] == null ? undefined : json['PublisherId'],
        'Timestamp': json['Timestamp'] == null ? undefined : (new Date(json['Timestamp'])),
        'Description': json['Description'] == null ? undefined : ApplicationDescriptionFromJSON(json['Description']),
        'ServerCapabilities': json['ServerCapabilities'] == null ? undefined : json['ServerCapabilities'],
    };
}

export function JsonApplicationDescriptionMessageToJSON(json: any): JsonApplicationDescriptionMessage {
    return JsonApplicationDescriptionMessageToJSONTyped(json, false);
}

export function JsonApplicationDescriptionMessageToJSONTyped(value?: JsonApplicationDescriptionMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'MessageId': value['MessageId'],
        'MessageType': value['MessageType'],
        'PublisherId': value['PublisherId'],
        'Timestamp': value['Timestamp'] == null ? undefined : ((value['Timestamp']).toISOString()),
        'Description': ApplicationDescriptionToJSON(value['Description']),
        'ServerCapabilities': value['ServerCapabilities'],
    };
}

