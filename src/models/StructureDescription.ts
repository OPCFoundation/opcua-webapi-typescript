/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StructureDefinition } from './StructureDefinition';
import {
    StructureDefinitionFromJSON,
    StructureDefinitionFromJSONTyped,
    StructureDefinitionToJSON,
    StructureDefinitionToJSONTyped,
} from './StructureDefinition';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part5/12.33).
 * @export
 * @interface StructureDescription
 */
export interface StructureDescription {
    /**
     * 
     * @type {StructureDefinition}
     * @memberof StructureDescription
     */
    StructureDefinition?: StructureDefinition;
    /**
     * 
     * @type {string}
     * @memberof StructureDescription
     */
    DataTypeId?: string;
    /**
     * 
     * @type {string}
     * @memberof StructureDescription
     */
    Name?: string;
}

/**
 * Check if a given object implements the StructureDescription interface.
 */
export function instanceOfStructureDescription(value: object): value is StructureDescription {
    return true;
}

export function StructureDescriptionFromJSON(json: any): StructureDescription {
    return StructureDescriptionFromJSONTyped(json, false);
}

export function StructureDescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): StructureDescription {
    if (json == null) {
        return json;
    }
    return {
        
        'StructureDefinition': json['StructureDefinition'] == null ? undefined : StructureDefinitionFromJSON(json['StructureDefinition']),
        'DataTypeId': json['DataTypeId'] == null ? undefined : json['DataTypeId'],
        'Name': json['Name'] == null ? undefined : json['Name'],
    };
}

export function StructureDescriptionToJSON(json: any): StructureDescription {
    return StructureDescriptionToJSONTyped(json, false);
}

export function StructureDescriptionToJSONTyped(value?: StructureDescription | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'StructureDefinition': StructureDefinitionToJSON(value['StructureDefinition']),
        'DataTypeId': value['DataTypeId'],
        'Name': value['Name'],
    };
}

