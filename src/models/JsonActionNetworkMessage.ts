/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * [Link to specification]().
 * @export
 * @interface JsonActionNetworkMessage
 */
export interface JsonActionNetworkMessage {
    /**
     * 
     * @type {string}
     * @memberof JsonActionNetworkMessage
     */
    MessageId?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonActionNetworkMessage
     */
    MessageType?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonActionNetworkMessage
     */
    PublisherId?: string;
    /**
     * 
     * @type {Date}
     * @memberof JsonActionNetworkMessage
     */
    Timestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof JsonActionNetworkMessage
     */
    ResponseAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonActionNetworkMessage
     */
    CorrelationData?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonActionNetworkMessage
     */
    RequestorId?: string;
    /**
     * 
     * @type {number}
     * @memberof JsonActionNetworkMessage
     */
    TimeoutHint?: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof JsonActionNetworkMessage
     */
    Messages?: Array<object>;
}

/**
 * Check if a given object implements the JsonActionNetworkMessage interface.
 */
export function instanceOfJsonActionNetworkMessage(value: object): value is JsonActionNetworkMessage {
    return true;
}

export function JsonActionNetworkMessageFromJSON(json: any): JsonActionNetworkMessage {
    return JsonActionNetworkMessageFromJSONTyped(json, false);
}

export function JsonActionNetworkMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): JsonActionNetworkMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'MessageId': json['MessageId'] == null ? undefined : json['MessageId'],
        'MessageType': json['MessageType'] == null ? undefined : json['MessageType'],
        'PublisherId': json['PublisherId'] == null ? undefined : json['PublisherId'],
        'Timestamp': json['Timestamp'] == null ? undefined : (new Date(json['Timestamp'])),
        'ResponseAddress': json['ResponseAddress'] == null ? undefined : json['ResponseAddress'],
        'CorrelationData': json['CorrelationData'] == null ? undefined : json['CorrelationData'],
        'RequestorId': json['RequestorId'] == null ? undefined : json['RequestorId'],
        'TimeoutHint': json['TimeoutHint'] == null ? undefined : json['TimeoutHint'],
        'Messages': json['Messages'] == null ? undefined : json['Messages'],
    };
}

export function JsonActionNetworkMessageToJSON(json: any): JsonActionNetworkMessage {
    return JsonActionNetworkMessageToJSONTyped(json, false);
}

export function JsonActionNetworkMessageToJSONTyped(value?: JsonActionNetworkMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'MessageId': value['MessageId'],
        'MessageType': value['MessageType'],
        'PublisherId': value['PublisherId'],
        'Timestamp': value['Timestamp'] == null ? undefined : ((value['Timestamp']).toISOString()),
        'ResponseAddress': value['ResponseAddress'],
        'CorrelationData': value['CorrelationData'],
        'RequestorId': value['RequestorId'],
        'TimeoutHint': value['TimeoutHint'],
        'Messages': value['Messages'],
    };
}

