/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeyValuePair } from './KeyValuePair';
import {
    KeyValuePairFromJSON,
    KeyValuePairFromJSONTyped,
    KeyValuePairToJSON,
    KeyValuePairToJSONTyped,
} from './KeyValuePair';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part14/6.2.4/#6.2.4.5.1).
 * @export
 * @interface DataSetWriterDataType
 */
export interface DataSetWriterDataType {
    /**
     * 
     * @type {string}
     * @memberof DataSetWriterDataType
     */
    Name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DataSetWriterDataType
     */
    Enabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof DataSetWriterDataType
     */
    DataSetWriterId?: number;
    /**
     * 
     * @type {number}
     * @memberof DataSetWriterDataType
     */
    DataSetFieldContentMask?: number;
    /**
     * 
     * @type {number}
     * @memberof DataSetWriterDataType
     */
    KeyFrameCount?: number;
    /**
     * 
     * @type {string}
     * @memberof DataSetWriterDataType
     */
    DataSetName?: string;
    /**
     * 
     * @type {Array<KeyValuePair>}
     * @memberof DataSetWriterDataType
     */
    DataSetWriterProperties?: Array<KeyValuePair>;
    /**
     * 
     * @type {object}
     * @memberof DataSetWriterDataType
     */
    TransportSettings?: object;
    /**
     * 
     * @type {object}
     * @memberof DataSetWriterDataType
     */
    MessageSettings?: object;
}

/**
 * Check if a given object implements the DataSetWriterDataType interface.
 */
export function instanceOfDataSetWriterDataType(value: object): value is DataSetWriterDataType {
    return true;
}

export function DataSetWriterDataTypeFromJSON(json: any): DataSetWriterDataType {
    return DataSetWriterDataTypeFromJSONTyped(json, false);
}

export function DataSetWriterDataTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSetWriterDataType {
    if (json == null) {
        return json;
    }
    return {
        
        'Name': json['Name'] == null ? undefined : json['Name'],
        'Enabled': json['Enabled'] == null ? undefined : json['Enabled'],
        'DataSetWriterId': json['DataSetWriterId'] == null ? undefined : json['DataSetWriterId'],
        'DataSetFieldContentMask': json['DataSetFieldContentMask'] == null ? undefined : json['DataSetFieldContentMask'],
        'KeyFrameCount': json['KeyFrameCount'] == null ? undefined : json['KeyFrameCount'],
        'DataSetName': json['DataSetName'] == null ? undefined : json['DataSetName'],
        'DataSetWriterProperties': json['DataSetWriterProperties'] == null ? undefined : ((json['DataSetWriterProperties'] as Array<any>).map(KeyValuePairFromJSON)),
        'TransportSettings': json['TransportSettings'] == null ? undefined : json['TransportSettings'],
        'MessageSettings': json['MessageSettings'] == null ? undefined : json['MessageSettings'],
    };
}

export function DataSetWriterDataTypeToJSON(json: any): DataSetWriterDataType {
    return DataSetWriterDataTypeToJSONTyped(json, false);
}

export function DataSetWriterDataTypeToJSONTyped(value?: DataSetWriterDataType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Name': value['Name'],
        'Enabled': value['Enabled'],
        'DataSetWriterId': value['DataSetWriterId'],
        'DataSetFieldContentMask': value['DataSetFieldContentMask'],
        'KeyFrameCount': value['KeyFrameCount'],
        'DataSetName': value['DataSetName'],
        'DataSetWriterProperties': value['DataSetWriterProperties'] == null ? undefined : ((value['DataSetWriterProperties'] as Array<any>).map(KeyValuePairToJSON)),
        'TransportSettings': value['TransportSettings'],
        'MessageSettings': value['MessageSettings'],
    };
}

