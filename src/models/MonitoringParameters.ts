/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExtensionObject } from './ExtensionObject';
import {
    ExtensionObjectFromJSON,
    ExtensionObjectFromJSONTyped,
    ExtensionObjectToJSON,
    ExtensionObjectToJSONTyped,
} from './ExtensionObject';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/7.21).
 * @export
 * @interface MonitoringParameters
 */
export interface MonitoringParameters {
    /**
     * 
     * @type {number}
     * @memberof MonitoringParameters
     */
    ClientHandle?: number;
    /**
     * 
     * @type {number}
     * @memberof MonitoringParameters
     */
    SamplingInterval?: number;
    /**
     * 
     * @type {ExtensionObject}
     * @memberof MonitoringParameters
     */
    Filter?: ExtensionObject;
    /**
     * 
     * @type {number}
     * @memberof MonitoringParameters
     */
    QueueSize?: number;
    /**
     * 
     * @type {boolean}
     * @memberof MonitoringParameters
     */
    DiscardOldest?: boolean;
}

/**
 * Check if a given object implements the MonitoringParameters interface.
 */
export function instanceOfMonitoringParameters(value: object): value is MonitoringParameters {
    return true;
}

export function MonitoringParametersFromJSON(json: any): MonitoringParameters {
    return MonitoringParametersFromJSONTyped(json, false);
}

export function MonitoringParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonitoringParameters {
    if (json == null) {
        return json;
    }
    return {
        
        'ClientHandle': json['ClientHandle'] == null ? undefined : json['ClientHandle'],
        'SamplingInterval': json['SamplingInterval'] == null ? undefined : json['SamplingInterval'],
        'Filter': json['Filter'] == null ? undefined : ExtensionObjectFromJSON(json['Filter']),
        'QueueSize': json['QueueSize'] == null ? undefined : json['QueueSize'],
        'DiscardOldest': json['DiscardOldest'] == null ? undefined : json['DiscardOldest'],
    };
}

export function MonitoringParametersToJSON(json: any): MonitoringParameters {
    return MonitoringParametersToJSONTyped(json, false);
}

export function MonitoringParametersToJSONTyped(value?: MonitoringParameters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ClientHandle': value['ClientHandle'],
        'SamplingInterval': value['SamplingInterval'],
        'Filter': ExtensionObjectToJSON(value['Filter']),
        'QueueSize': value['QueueSize'],
        'DiscardOldest': value['DiscardOldest'],
    };
}

