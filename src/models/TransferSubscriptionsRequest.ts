/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequestHeader } from './RequestHeader';
import {
    RequestHeaderFromJSON,
    RequestHeaderFromJSONTyped,
    RequestHeaderToJSON,
    RequestHeaderToJSONTyped,
} from './RequestHeader';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/5.14.7/#5.14.7.2).
 * @export
 * @interface TransferSubscriptionsRequest
 */
export interface TransferSubscriptionsRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof TransferSubscriptionsRequest
     */
    RequestHeader?: RequestHeader;
    /**
     * 
     * @type {Array<number>}
     * @memberof TransferSubscriptionsRequest
     */
    SubscriptionIds?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof TransferSubscriptionsRequest
     */
    SendInitialValues?: boolean;
}

/**
 * Check if a given object implements the TransferSubscriptionsRequest interface.
 */
export function instanceOfTransferSubscriptionsRequest(value: object): value is TransferSubscriptionsRequest {
    return true;
}

export function TransferSubscriptionsRequestFromJSON(json: any): TransferSubscriptionsRequest {
    return TransferSubscriptionsRequestFromJSONTyped(json, false);
}

export function TransferSubscriptionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferSubscriptionsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'RequestHeader': json['RequestHeader'] == null ? undefined : RequestHeaderFromJSON(json['RequestHeader']),
        'SubscriptionIds': json['SubscriptionIds'] == null ? undefined : json['SubscriptionIds'],
        'SendInitialValues': json['SendInitialValues'] == null ? undefined : json['SendInitialValues'],
    };
}

export function TransferSubscriptionsRequestToJSON(json: any): TransferSubscriptionsRequest {
    return TransferSubscriptionsRequestToJSONTyped(json, false);
}

export function TransferSubscriptionsRequestToJSONTyped(value?: TransferSubscriptionsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'RequestHeader': RequestHeaderToJSON(value['RequestHeader']),
        'SubscriptionIds': value['SubscriptionIds'],
        'SendInitialValues': value['SendInitialValues'],
    };
}

