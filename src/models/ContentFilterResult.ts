/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DiagnosticInfo } from './DiagnosticInfo';
import {
    DiagnosticInfoFromJSON,
    DiagnosticInfoFromJSONTyped,
    DiagnosticInfoToJSON,
    DiagnosticInfoToJSONTyped,
} from './DiagnosticInfo';
import type { ContentFilterElementResult } from './ContentFilterElementResult';
import {
    ContentFilterElementResultFromJSON,
    ContentFilterElementResultFromJSONTyped,
    ContentFilterElementResultToJSON,
    ContentFilterElementResultToJSONTyped,
} from './ContentFilterElementResult';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/7.7.2).
 * @export
 * @interface ContentFilterResult
 */
export interface ContentFilterResult {
    /**
     * 
     * @type {Array<ContentFilterElementResult>}
     * @memberof ContentFilterResult
     */
    ElementResults?: Array<ContentFilterElementResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof ContentFilterResult
     */
    ElementDiagnosticInfos?: Array<DiagnosticInfo>;
}

/**
 * Check if a given object implements the ContentFilterResult interface.
 */
export function instanceOfContentFilterResult(value: object): value is ContentFilterResult {
    return true;
}

export function ContentFilterResultFromJSON(json: any): ContentFilterResult {
    return ContentFilterResultFromJSONTyped(json, false);
}

export function ContentFilterResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentFilterResult {
    if (json == null) {
        return json;
    }
    return {
        
        'ElementResults': json['ElementResults'] == null ? undefined : ((json['ElementResults'] as Array<any>).map(ContentFilterElementResultFromJSON)),
        'ElementDiagnosticInfos': json['ElementDiagnosticInfos'] == null ? undefined : ((json['ElementDiagnosticInfos'] as Array<any>).map(DiagnosticInfoFromJSON)),
    };
}

export function ContentFilterResultToJSON(json: any): ContentFilterResult {
    return ContentFilterResultToJSONTyped(json, false);
}

export function ContentFilterResultToJSONTyped(value?: ContentFilterResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ElementResults': value['ElementResults'] == null ? undefined : ((value['ElementResults'] as Array<any>).map(ContentFilterElementResultToJSON)),
        'ElementDiagnosticInfos': value['ElementDiagnosticInfos'] == null ? undefined : ((value['ElementDiagnosticInfos'] as Array<any>).map(DiagnosticInfoToJSON)),
    };
}

