/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusCode } from './StatusCode';
import {
    StatusCodeFromJSON,
    StatusCodeFromJSONTyped,
    StatusCodeToJSON,
    StatusCodeToJSONTyped,
} from './StatusCode';
import type { BrowsePathTarget } from './BrowsePathTarget';
import {
    BrowsePathTargetFromJSON,
    BrowsePathTargetFromJSONTyped,
    BrowsePathTargetToJSON,
    BrowsePathTargetToJSONTyped,
} from './BrowsePathTarget';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/5.9.4/#5.9.4.2).
 * @export
 * @interface BrowsePathResult
 */
export interface BrowsePathResult {
    /**
     * 
     * @type {StatusCode}
     * @memberof BrowsePathResult
     */
    StatusCode?: StatusCode;
    /**
     * 
     * @type {Array<BrowsePathTarget>}
     * @memberof BrowsePathResult
     */
    Targets?: Array<BrowsePathTarget>;
}

/**
 * Check if a given object implements the BrowsePathResult interface.
 */
export function instanceOfBrowsePathResult(value: object): value is BrowsePathResult {
    return true;
}

export function BrowsePathResultFromJSON(json: any): BrowsePathResult {
    return BrowsePathResultFromJSONTyped(json, false);
}

export function BrowsePathResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrowsePathResult {
    if (json == null) {
        return json;
    }
    return {
        
        'StatusCode': json['StatusCode'] == null ? undefined : StatusCodeFromJSON(json['StatusCode']),
        'Targets': json['Targets'] == null ? undefined : ((json['Targets'] as Array<any>).map(BrowsePathTargetFromJSON)),
    };
}

export function BrowsePathResultToJSON(json: any): BrowsePathResult {
    return BrowsePathResultToJSONTyped(json, false);
}

export function BrowsePathResultToJSONTyped(value?: BrowsePathResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'StatusCode': StatusCodeToJSON(value['StatusCode']),
        'Targets': value['Targets'] == null ? undefined : ((value['Targets'] as Array<any>).map(BrowsePathTargetToJSON)),
    };
}

