/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Variant } from './Variant';
import {
    VariantFromJSON,
    VariantFromJSONTyped,
    VariantToJSON,
    VariantToJSONTyped,
} from './Variant';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/7.25.3).
 * @export
 * @interface EventFieldList
 */
export interface EventFieldList {
    /**
     * 
     * @type {number}
     * @memberof EventFieldList
     */
    ClientHandle?: number;
    /**
     * 
     * @type {Array<Variant>}
     * @memberof EventFieldList
     */
    EventFields?: Array<Variant>;
}

/**
 * Check if a given object implements the EventFieldList interface.
 */
export function instanceOfEventFieldList(value: object): value is EventFieldList {
    return true;
}

export function EventFieldListFromJSON(json: any): EventFieldList {
    return EventFieldListFromJSONTyped(json, false);
}

export function EventFieldListFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventFieldList {
    if (json == null) {
        return json;
    }
    return {
        
        'ClientHandle': json['ClientHandle'] == null ? undefined : json['ClientHandle'],
        'EventFields': json['EventFields'] == null ? undefined : ((json['EventFields'] as Array<any>).map(VariantFromJSON)),
    };
}

export function EventFieldListToJSON(json: any): EventFieldList {
    return EventFieldListToJSONTyped(json, false);
}

export function EventFieldListToJSONTyped(value?: EventFieldList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ClientHandle': value['ClientHandle'],
        'EventFields': value['EventFields'] == null ? undefined : ((value['EventFields'] as Array<any>).map(VariantToJSON)),
    };
}

