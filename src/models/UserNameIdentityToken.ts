/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part5/12.3.15/#12.3.15.3).
 * @export
 * @interface UserNameIdentityToken
 */
export interface UserNameIdentityToken {
    /**
     * 
     * @type {string}
     * @memberof UserNameIdentityToken
     */
    UserName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserNameIdentityToken
     */
    Password?: string;
    /**
     * 
     * @type {string}
     * @memberof UserNameIdentityToken
     */
    EncryptionAlgorithm?: string;
    /**
     * 
     * @type {string}
     * @memberof UserNameIdentityToken
     */
    PolicyId?: string;
}

/**
 * Check if a given object implements the UserNameIdentityToken interface.
 */
export function instanceOfUserNameIdentityToken(value: object): value is UserNameIdentityToken {
    return true;
}

export function UserNameIdentityTokenFromJSON(json: any): UserNameIdentityToken {
    return UserNameIdentityTokenFromJSONTyped(json, false);
}

export function UserNameIdentityTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserNameIdentityToken {
    if (json == null) {
        return json;
    }
    return {
        
        'UserName': json['UserName'] == null ? undefined : json['UserName'],
        'Password': json['Password'] == null ? undefined : json['Password'],
        'EncryptionAlgorithm': json['EncryptionAlgorithm'] == null ? undefined : json['EncryptionAlgorithm'],
        'PolicyId': json['PolicyId'] == null ? undefined : json['PolicyId'],
    };
}

export function UserNameIdentityTokenToJSON(json: any): UserNameIdentityToken {
    return UserNameIdentityTokenToJSONTyped(json, false);
}

export function UserNameIdentityTokenToJSONTyped(value?: UserNameIdentityToken | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'UserName': value['UserName'],
        'Password': value['Password'],
        'EncryptionAlgorithm': value['EncryptionAlgorithm'],
        'PolicyId': value['PolicyId'],
    };
}

