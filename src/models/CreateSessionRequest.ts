/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequestHeader } from './RequestHeader';
import {
    RequestHeaderFromJSON,
    RequestHeaderFromJSONTyped,
    RequestHeaderToJSON,
    RequestHeaderToJSONTyped,
} from './RequestHeader';
import type { ApplicationDescription } from './ApplicationDescription';
import {
    ApplicationDescriptionFromJSON,
    ApplicationDescriptionFromJSONTyped,
    ApplicationDescriptionToJSON,
    ApplicationDescriptionToJSONTyped,
} from './ApplicationDescription';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/5.7.2/#5.7.2.2).
 * @export
 * @interface CreateSessionRequest
 */
export interface CreateSessionRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof CreateSessionRequest
     */
    RequestHeader?: RequestHeader;
    /**
     * 
     * @type {ApplicationDescription}
     * @memberof CreateSessionRequest
     */
    ClientDescription?: ApplicationDescription;
    /**
     * 
     * @type {string}
     * @memberof CreateSessionRequest
     */
    ServerUri?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSessionRequest
     */
    EndpointUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSessionRequest
     */
    SessionName?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSessionRequest
     */
    ClientNonce?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSessionRequest
     */
    ClientCertificate?: string;
    /**
     * 
     * @type {number}
     * @memberof CreateSessionRequest
     */
    RequestedSessionTimeout?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateSessionRequest
     */
    MaxResponseMessageSize?: number;
}

/**
 * Check if a given object implements the CreateSessionRequest interface.
 */
export function instanceOfCreateSessionRequest(value: object): value is CreateSessionRequest {
    return true;
}

export function CreateSessionRequestFromJSON(json: any): CreateSessionRequest {
    return CreateSessionRequestFromJSONTyped(json, false);
}

export function CreateSessionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSessionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'RequestHeader': json['RequestHeader'] == null ? undefined : RequestHeaderFromJSON(json['RequestHeader']),
        'ClientDescription': json['ClientDescription'] == null ? undefined : ApplicationDescriptionFromJSON(json['ClientDescription']),
        'ServerUri': json['ServerUri'] == null ? undefined : json['ServerUri'],
        'EndpointUrl': json['EndpointUrl'] == null ? undefined : json['EndpointUrl'],
        'SessionName': json['SessionName'] == null ? undefined : json['SessionName'],
        'ClientNonce': json['ClientNonce'] == null ? undefined : json['ClientNonce'],
        'ClientCertificate': json['ClientCertificate'] == null ? undefined : json['ClientCertificate'],
        'RequestedSessionTimeout': json['RequestedSessionTimeout'] == null ? undefined : json['RequestedSessionTimeout'],
        'MaxResponseMessageSize': json['MaxResponseMessageSize'] == null ? undefined : json['MaxResponseMessageSize'],
    };
}

export function CreateSessionRequestToJSON(json: any): CreateSessionRequest {
    return CreateSessionRequestToJSONTyped(json, false);
}

export function CreateSessionRequestToJSONTyped(value?: CreateSessionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'RequestHeader': RequestHeaderToJSON(value['RequestHeader']),
        'ClientDescription': ApplicationDescriptionToJSON(value['ClientDescription']),
        'ServerUri': value['ServerUri'],
        'EndpointUrl': value['EndpointUrl'],
        'SessionName': value['SessionName'],
        'ClientNonce': value['ClientNonce'],
        'ClientCertificate': value['ClientCertificate'],
        'RequestedSessionTimeout': value['RequestedSessionTimeout'],
        'MaxResponseMessageSize': value['MaxResponseMessageSize'],
    };
}

