/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusCode } from './StatusCode';
import {
    StatusCodeFromJSON,
    StatusCodeFromJSONTyped,
    StatusCodeToJSON,
    StatusCodeToJSONTyped,
} from './StatusCode';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/5.14.7/#5.14.7.2).
 * @export
 * @interface TransferResult
 */
export interface TransferResult {
    /**
     * 
     * @type {StatusCode}
     * @memberof TransferResult
     */
    StatusCode?: StatusCode;
    /**
     * 
     * @type {Array<number>}
     * @memberof TransferResult
     */
    AvailableSequenceNumbers?: Array<number>;
}

/**
 * Check if a given object implements the TransferResult interface.
 */
export function instanceOfTransferResult(value: object): value is TransferResult {
    return true;
}

export function TransferResultFromJSON(json: any): TransferResult {
    return TransferResultFromJSONTyped(json, false);
}

export function TransferResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferResult {
    if (json == null) {
        return json;
    }
    return {
        
        'StatusCode': json['StatusCode'] == null ? undefined : StatusCodeFromJSON(json['StatusCode']),
        'AvailableSequenceNumbers': json['AvailableSequenceNumbers'] == null ? undefined : json['AvailableSequenceNumbers'],
    };
}

export function TransferResultToJSON(json: any): TransferResult {
    return TransferResultToJSONTyped(json, false);
}

export function TransferResultToJSONTyped(value?: TransferResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'StatusCode': StatusCodeToJSON(value['StatusCode']),
        'AvailableSequenceNumbers': value['AvailableSequenceNumbers'],
    };
}

