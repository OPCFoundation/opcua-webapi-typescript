/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocalizedText } from './LocalizedText';
import {
    LocalizedTextFromJSON,
    LocalizedTextFromJSONTyped,
    LocalizedTextToJSON,
    LocalizedTextToJSONTyped,
} from './LocalizedText';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part5/12.2.12/#12.2.12.6).
 * @export
 * @interface EnumValueType
 */
export interface EnumValueType {
    /**
     * 
     * @type {number}
     * @memberof EnumValueType
     */
    Value?: number;
    /**
     * 
     * @type {LocalizedText}
     * @memberof EnumValueType
     */
    DisplayName?: LocalizedText;
    /**
     * 
     * @type {LocalizedText}
     * @memberof EnumValueType
     */
    Description?: LocalizedText;
}

/**
 * Check if a given object implements the EnumValueType interface.
 */
export function instanceOfEnumValueType(value: object): value is EnumValueType {
    return true;
}

export function EnumValueTypeFromJSON(json: any): EnumValueType {
    return EnumValueTypeFromJSONTyped(json, false);
}

export function EnumValueTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnumValueType {
    if (json == null) {
        return json;
    }
    return {
        
        'Value': json['Value'] == null ? undefined : json['Value'],
        'DisplayName': json['DisplayName'] == null ? undefined : LocalizedTextFromJSON(json['DisplayName']),
        'Description': json['Description'] == null ? undefined : LocalizedTextFromJSON(json['Description']),
    };
}

export function EnumValueTypeToJSON(json: any): EnumValueType {
    return EnumValueTypeToJSONTyped(json, false);
}

export function EnumValueTypeToJSONTyped(value?: EnumValueType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Value': value['Value'],
        'DisplayName': LocalizedTextToJSON(value['DisplayName']),
        'Description': LocalizedTextToJSON(value['Description']),
    };
}

