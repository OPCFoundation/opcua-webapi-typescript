/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExtensionObject } from './ExtensionObject';
import {
    ExtensionObjectFromJSON,
    ExtensionObjectFromJSONTyped,
    ExtensionObjectToJSON,
    ExtensionObjectToJSONTyped,
} from './ExtensionObject';

/**
 * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/7.7.1).
 * @export
 * @interface ContentFilterElement
 */
export interface ContentFilterElement {
    /**
     * [Link to specification](https://reference.opcfoundation.org/v105/Core/docs/Part4/7.7.3).
     * @type {number}
     * @memberof ContentFilterElement
     */
    FilterOperator?: number;
    /**
     * 
     * @type {Array<ExtensionObject>}
     * @memberof ContentFilterElement
     */
    FilterOperands?: Array<ExtensionObject>;
}

/**
 * Check if a given object implements the ContentFilterElement interface.
 */
export function instanceOfContentFilterElement(value: object): value is ContentFilterElement {
    return true;
}

export function ContentFilterElementFromJSON(json: any): ContentFilterElement {
    return ContentFilterElementFromJSONTyped(json, false);
}

export function ContentFilterElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentFilterElement {
    if (json == null) {
        return json;
    }
    return {
        
        'FilterOperator': json['FilterOperator'] == null ? undefined : json['FilterOperator'],
        'FilterOperands': json['FilterOperands'] == null ? undefined : ((json['FilterOperands'] as Array<any>).map(ExtensionObjectFromJSON)),
    };
}

export function ContentFilterElementToJSON(json: any): ContentFilterElement {
    return ContentFilterElementToJSONTyped(json, false);
}

export function ContentFilterElementToJSONTyped(value?: ContentFilterElement | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'FilterOperator': value['FilterOperator'],
        'FilterOperands': value['FilterOperands'] == null ? undefined : ((value['FilterOperands'] as Array<any>).map(ExtensionObjectToJSON)),
    };
}

